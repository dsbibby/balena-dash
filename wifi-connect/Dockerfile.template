FROM balenalib/%%BALENA_ARCH%%-python as builder

RUN install_packages dnsmasq wireless-tools git rsync binutils busybox-static
ARG BALENA_ARCH=%%BALENA_ARCH%%

WORKDIR /usr/src/app

RUN \
    export BASE_URL="https://github.com/balena-os/wifi-connect/releases" &&\    
    case $BALENA_ARCH in \
        "aarch64") \
            BINARY_ARCH_NAME="aarch64-unknown-linux-gnu" ;; \
        "amd64") \
            BINARY_ARCH_NAME="x86_64-unknown-linux-gnu" ;;\
        "armv7hf") \
            BINARY_ARCH_NAME="armv7-unknown-linux-gnueabihf" ;;\
        *) \
            echo >&2 "error: unsupported architecture ($BALENA_ARCH)"; exit 1 ;; \ 
    esac;\
    if [ ${VERSION} = "latest" ]; then \
        export URL_PARTIAL="latest/download" ; \
    else \
        export URL_PARTIAL="download/${VERSION}" ; \
    fi; \
    curl -Ls "$BASE_URL/$URL_PARTIAL/wifi-connect-$BINARY_ARCH_NAME.tar.gz" \
    | tar -xvz -C  /usr/src/app/

RUN pip install git+https://github.com/larsks/dockerize

RUN mkdir output

RUN dockerize -n --verbose -o /usr/src/app/output/ -u dnsmasq -a /var/run /var/run  --filetools `which busybox` `which balena-idle` `which dnsmasq` /usr/src/app/wifi-connect

WORKDIR /var/lib/misc

RUN touch dnsmasq.leases

FROM scratch
COPY --from=builder /usr/src/app/output/ ./
COPY --from=builder /usr/src/app/ui /usr/src/app/ui
COPY --from=builder /var/lib/misc/dnsmasq.leases /var/lib/misc/dnsmasq.leases
COPY start.sh ./

CMD ["/bin/busybox","sh", "start.sh"]
